{"version":3,"file":"static/js/583.6179ebce.chunk.js","mappings":"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","sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\nclass OrbitControls extends Controls {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"names":["_changeEvent","type","_startEvent","_endEvent","_ray","Ray","_plane","Plane","_TILT_LIMIT","Math","cos","MathUtils","DEG2RAD","_v","Vector3","_twoPI","PI","_STATE","_EPS","OrbitControls","Controls","constructor","object","super","arguments","length","undefined","this","state","enabled","target","cursor","minDistance","maxDistance","Infinity","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","keyRotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","_lastPosition","_lastQuaternion","Quaternion","_lastTargetPosition","_quat","setFromUnitVectors","up","_quatInverse","invert","_spherical","Spherical","_sphericalDelta","_scale","_panOffset","_rotateStart","Vector2","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_dollyDirection","_mouse","_performCursorZoom","_pointers","_pointerPositions","_controlActive","_onPointerMove","onPointerMove","bind","_onPointerDown","onPointerDown","_onPointerUp","onPointerUp","_onContextMenu","onContextMenu","_onMouseWheel","onMouseWheel","_onKeyDown","onKeyDown","_onTouchStart","onTouchStart","_onTouchMove","onTouchMove","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_interceptControlDown","interceptControlDown","_interceptControlUp","interceptControlUp","domElement","connect","update","addEventListener","passive","getRootNode","capture","style","touchAction","disconnect","removeEventListener","stopListenToKeyEvents","dispose","getPolarAngle","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","deltaTime","sub","applyQuaternion","setFromVector3","_rotateLeft","_getAutoRotationAngle","min","max","isFinite","makeSafe","addScaledVector","add","clampLength","zoomChanged","isOrthographicCamera","radius","_clampDistance","prevRadius","setFromSpherical","lookAt","multiplyScalar","set","newRadius","isPerspectiveCamera","radiusDelta","updateMatrixWorld","mouseBefore","x","y","unproject","prevZoom","mouseAfter","console","warn","transformDirection","matrix","origin","direction","abs","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","quaternion","_getZoomScale","delta","normalizedDelta","pow","angle","_rotateUp","_panLeft","distance","objectMatrix","setFromMatrixColumn","_panUp","crossVectors","_pan","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","_dollyOut","dollyScale","_dollyIn","_updateZoomParameters","rect","getBoundingClientRect","dx","dy","w","width","h","height","normalize","dist","_handleMouseDownRotate","event","clientX","clientY","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveRotate","subVectors","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseWheel","_handleKeyDown","needsUpdate","code","ctrlKey","metaKey","shiftKey","preventDefault","_handleTouchStartRotate","pageX","pageY","_getSecondPointerPosition","_handleTouchStartPan","_handleTouchStartDolly","sqrt","_handleTouchStartDollyPan","_handleTouchStartDollyRotate","_handleTouchMoveRotate","_handleTouchMovePan","_handleTouchMoveDolly","centerX","centerY","_handleTouchMoveDollyPan","_handleTouchMoveDollyRotate","_addPointer","push","pointerId","_removePointer","i","splice","_isTrackingPointer","_trackPointer","_customWheelEvent","mode","deltaMode","newEvent","setPointerCapture","pointerType","releasePointerCapture","mouseAction","button","DOLLY_ROTATE","key"],"sourceRoot":""}